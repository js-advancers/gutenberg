/**
 * Retrieves the translation of text.
 *
 * @see https://developer.wordpress.org/block-editor/packages/packages-i18n/
 */
import { __ } from '@wordpress/i18n';

import { RichText, MediaUpload } from '@wordpress/block-editor';

import { Button } from '@wordpress/components';

/**
 * The edit function describes the structure of your block in the context of the
 * editor. This represents what the editor will render when the block is used.
 *
 * @see https://developer.wordpress.org/block-editor/developers/block-api/block-edit-save/#edit
 *
 * @param {Object} [props] Properties passed from the editor.
 *
 * @return {WPElement} Element to render.
 */
export default function Edit( props ) {
	const {
			className,
			attributes: { title, mediaID, mediaURL, ingredients, instructions },
			setAttributes,
	} = props;
	const onChangeTitle = ( value ) => {
		setAttributes( { title: value } );
	};

	const onSelectImage = ( media ) => {
		setAttributes( {
			mediaURL: media.url,
			mediaID: media.id,
		} );
	};
	const onChangeIngredients = ( value ) => {
		setAttributes( { ingredients: value } );
	};

	const onChangeInstructions = ( value ) => {
		setAttributes( { instructions: value } );
	};

	return (
		<div className={ className }>
			<RichText
				tagName="h2"
				placeholder={ __( 'Write Recipe title…', '{{textdomain}}' ) }
				value={ title }
				onChange={ onChangeTitle }
			/>
			<div className="recipe-image">
				<MediaUpload
					onSelect={ onSelectImage }
					allowedTypes="image"
					value={ mediaID }
					render={ ( { open } ) => (
						<Button
							className={ mediaID ? 'image-button' : 'button button-large' }
							onClick={ open }
						>
							{ ! mediaID ? (
								__( 'Upload Image', '{{textdomain}}' )
							) : (
								<img
									src={ mediaURL }
									alt={ __( 'Upload Recipe Image', '{{textdomain}}' ) }
								/>
							) }
						</Button>
					) }
				/>
			</div>
			<h3>{ __( 'Ingredients', '{{textdomain}}' ) }</h3>
			<RichText
				tagName="ul"
				multiline="li"
				placeholder={ __( 'Write a list of ingredients…', '{{textdomain}}' ) }
				value={ ingredients }
				onChange={ onChangeIngredients }
				className="ingredients"
			/>
			<h3>{ __( 'Instructions', '{{textdomain}}' ) }</h3>
			<RichText
				tagName="div"
				multiline="p"
				className="steps"
				placeholder={ __( 'Write the instructions…', '{{textdomain}}' ) }
				value={ instructions }
				onChange={ onChangeInstructions }
			/>
		</div>
	);
}